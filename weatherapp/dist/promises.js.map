{"version":3,"sources":["../server/promises.js"],"names":["asyncAdd","a","b","Promise","resolve","reject","setTimeout","console","log","then","result","catch","error"],"mappings":";;AAAA,IAAIA,WAAW,SAAXA,QAAW,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,mBAAW,YAAM;AACb,gBAAI,OAAOL,CAAP,KAAa,QAAb,IAAyB,OAAOC,CAAP,KAAa,QAA1C,EAAoD;AAChDE,wBAAQH,IAAEC,CAAV;AACH,aAFD,MAEO;AACHG,uBAAO,gCAAP;AACH;AACJ,SAND,EAMG,IANH;AAOH,KARM,CAAP;AASH,CAVD;;AAYAE,QAAQC,GAAR,CAAY,yBAAZ;;AAEAR,SAAS,CAAT,EAAY,GAAZ,EACCS,IADD,CACM,UAACC,MAAD,EAAY;AACdH,YAAQC,GAAR,CAAY,UAAZ,EAAwBE,MAAxB;AACAH,YAAQC,GAAR,CAAY,2BAAZ;AACA,WAAOR,SAASU,MAAT,EAAiB,EAAjB,CAAP;AACH,CALD,EAMCD,IAND,CAMM,UAACC,MAAD,EAAY;AACdH,YAAQC,GAAR,CAAY,UAAZ,EAAwBE,MAAxB;AACH,CARD,EASCC,KATD,CASO,UAACC,KAAD,EAAW;AACdL,YAAQC,GAAR,CAAY,QAAZ,EAAsBI,KAAtB;AACH,CAXD;;AAaA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"promises.js","sourcesContent":["var asyncAdd = (a, b) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (typeof a === 'number' && typeof b === 'number') {\n                resolve(a+b);\n            } else {\n                reject('Both arguments must be numbers');\n            }\n        }, 1000);\n    });\n};\n\nconsole.log('>>> testing promises...');\n\nasyncAdd(4, 200)\n.then((result) => {\n    console.log('Success:', result);\n    console.log('Making another promise...');\n    return asyncAdd(result, 30);\n})\n.then((result) => {\n    console.log('Success:', result);\n})\n.catch((error) => {\n    console.log('Error:', error);\n});\n\n// var promise = new Promise((resolve,reject) => {\n//     setTimeout(() => {\n//         // resolve('It worked correctly.');\n//         reject('it does not work correctly.');\n//     }, 2000);\n// });\n\n// promise\n// .then((msg) => {\n//     console.log('Success:', msg);\n// },(error) => {\n//     console.log('Failed:', error);\n// });"]}