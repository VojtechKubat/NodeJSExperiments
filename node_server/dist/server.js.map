{"version":3,"sources":["../server/server.js"],"names":["app","use","json","post","req","res","console","log","body","todo","text","save","then","doc","send","err","status","get","find","code","_id","params","id","listen"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,MAAM,wBAAV;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;;AAEAF,IAAIG,IAAJ,CAAS,QAAT,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BC,YAAQC,GAAR,CAAY,eAAZ,EAA6BH,IAAII,IAAjC,EAD6B,CACmB;AAChD,QAAIC,OAAO,mBAAS;AAChBC,cAAMN,IAAII,IAAJ,CAASE;AADC,KAAT,CAAX;AAGAD,SAAKE,IAAL,GAAYC,IAAZ,CACI,UAACC,GAAD,EAAO;AACHR,YAAIS,IAAJ,CAASD,GAAT;AACH,KAHL,EAII,UAACE,GAAD,EAAO;AACHV,YAAIW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,GAArB;AACAT,gBAAQC,GAAR,CAAY,WAAZ,EAAyBQ,GAAzB;AACH,KAPL;AASH,CAdD;;AAgBAf,IAAIiB,GAAJ,CAAQ,QAAR,EAAkB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAC5B,mBAAKa,IAAL,GAAYN,IAAZ,CACI,UAACC,GAAD,EAAO;AACHR,YAAIS,IAAJ,CAAS;AACLD,oBADK;AAELM,kBAAM;AAFD,SAAT;AAIH,KANL,EAOI,UAACJ,GAAD,EAAO;AACHV,YAAIW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,GAArB;AACAT,gBAAQC,GAAR,CAAY,WAAZ,EAAyBQ,GAAzB;AACH,KAVL;AAYH,CAbD;;AAeAf,IAAIiB,GAAJ,CAAQ,YAAR,EAAsB,UAACb,GAAD,EAAMC,GAAN,EAAY;AAC9B,mBAAKa,IAAL,CAAU,EAACE,KAAK,sBAAahB,IAAIiB,MAAJ,CAAWC,EAAxB,CAAN,EAAV,EAA8CV,IAA9C,CACI,UAACC,GAAD,EAAO;AACHR,YAAIS,IAAJ,CAAS;AACLD,oBADK;AAELM,kBAAM;AAFD,SAAT;AAIH,KANL,EAOI,UAACJ,GAAD,EAAO;AACHV,YAAIW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,GAArB;AACAT,gBAAQC,GAAR,CAAY,WAAZ,EAAyBQ,GAAzB;AACH,KAVL;;AAcA;AACA;AACH,CAjBD;;AAoBAf,IAAIuB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnBjB,YAAQC,GAAR,CAAY,kCAAZ;AACH,CAFD;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\n\nimport mongoose from './db/mongoose';\nimport Todo from './models/todo';\nimport { ObjectID } from 'mongodb';\n\nvar app = express();\n\n// using third party middleware\napp.use(bodyParser.json());\n\napp.post('/todos', (req, res) => {\n    console.log('Request body:', req.body);         // body is available because of bodyParser middleware\n    var todo = new Todo({\n        text: req.body.text\n    });\n    todo.save().then(\n        (doc)=>{\n            res.send(doc);\n        },\n        (err)=>{\n            res.status(400).send(err);\n            console.log('>>> Error', err);\n        }\n    );\n});\n\napp.get('/todos', (req, res) => {\n    Todo.find().then(\n        (doc)=>{\n            res.send({\n                doc,\n                code: 'success'\n            });\n        },\n        (err)=>{\n            res.status(400).send(err);\n            console.log('>>> Error', err);            \n        }\n    );\n});\n\napp.get('/todos/:id', (req, res)=>{\n    Todo.find({_id: new ObjectID(req.params.id)}).then(\n        (doc)=>{\n            res.send({\n                doc,\n                code: 'success'\n            });\n        },\n        (err)=>{\n            res.status(400).send(err);\n            console.log('>>> Error', err);            \n        }\n    );\n\n\n    // res.send(req.params);\n    // req.params.id\n});\n\n\napp.listen(3000, () => {\n    console.log('Server is listening on port 3000');\n});\n\n// create new todo document based on related model\n// var newTodo = new Todo({\n//     text: '  abcdefg ',\n//     // completed: true,         // we have a default value\n//     completedAt: 156478\n// });\n\n// // save it to the database\n// newTodo.save()\n// .then(\n//     (doc) => {\n//         console.log('New todo saved by mongoose:\\n', doc);\n//     }\n// )\n// .catch(\n//     (err) => {\n//         console.log('Error - Unable to save todo', err);\n//     }\n// )\n\n\n// mongoose.disconnect();"]}